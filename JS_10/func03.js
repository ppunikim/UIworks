// 두 번째 함수 선언
// func1 라는 이름으로 함수 선언하기
const func1 = function () {};

//두 가지 방법의 함수, "" 있는 것은 위험하다.
/* "함수 호이스팅" : 호출되는 부분과 선언되는 부분의 코드를 변경하여 실행
func4() 함수는 아직 선언문이 발견되지 않았다.
js는 즉시 실행을 멈추고, 이후에 있는 모든 코드를 scan한다.
마침 다음 라인에서 func4() 함수 선언문을 만났다. 
이 순간 js는 함수 호출코드와 함수 선언코드를 서로 바꿔치기 한다.
그리고 정상적으로 함수 호출이 이루어져 코드가 잘 작동된다.
*/
func4(); //호출한 것보다 먼저 써도 호출가능.
function func4() {
  console.log("나는 func4이다");
}

/*
JS에서 const로 시작하는 함수 선언
새로운 JS에서는 기본에 funcion으로 시작하는 함수 대신
변수처럼 const로 시잘하는 함수 선언 명령문이 도입되었다.

const로 시작하는 함수는
실행과정에서 호이스팅이 일어나지 않는다.

반드시 함수를 호출하기 전에
선언문이 나타나야 한다.
*/

const func5 = function () {
  console.log("나는 func5이다");
};
func5();
